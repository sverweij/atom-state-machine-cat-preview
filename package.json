{
  "name": "state-machine-cat-preview",
  "version": "2.6.6",
  "main": "./lib/main",
  "description": "Write beautiful state charts",
  "repository": "git@github.com:sverweij/atom-state-machine-cat-preview.git",
  "keywords": [
    "smcat",
    "state machine",
    "state chart",
    "state diagram",
    "fsm",
    "preview"
  ],
  "license": "MIT",
  "engines": {
    "atom": "*"
  },
  "deserializers": {
    "deserializePreviewView": "deserialize"
  },
  "configSchema": {
    "liveUpdate": {
      "type": "boolean",
      "default": true,
      "order": 1,
      "description": "Re-render the preview as the contents of the source changes, without requiring the source buffer to be saved. If disabled, the preview is re-rendered only when the buffer is saved to disk."
    },
    "openPreviewInSplitPane": {
      "type": "boolean",
      "default": true,
      "order": 2,
      "description": "Open the preview in a split pane. If disabled, the preview is opened in a new tab in the same pane."
    },
    "directionToSplitPreviewPaneIn": {
      "type": "string",
      "default": "right",
      "order": 3,
      "description": "The direction to split the preview pane to. Usually you want that to be 'right' (the default), unless you edit with a vertical display when 'bottom' is probably better.",
      "enum": [
        "right",
        "down"
      ]
    },
    "useGraphvizCommandLine": {
      "type": "boolean",
      "default": false,
      "order": 4,
      "description": "Keep unchecked when in doubt.<ul><li>Checked:<br>state-machine-cat-preview will use the command line version of GraphViz dot. For this to work GraphViz has to be installed on your machine, and it has to be on your path.<li>Unchecked:<br>state-machine-cat-preview will use viz.js for rendering.</ul>"
    },
    "GraphvizPath": {
      "type": "string",
      "default": "",
      "order": 5,
      "description": "If you use the command line version of GraphViz, and GraphViz is not on your _path_, you can use this to specify where to find the executable (including the name of the executable e.g. `/Users/superman/bin/dot`).<br><br>Leave empty when it's on your path."
    },
    "direction": {
      "type": "string",
      "default": "top-down",
      "order": 6,
      "description": "The direction to render the state machine in",
      "enum": [
        "top-down",
        "left-right"
      ]
    },
    "layoutEngine": {
      "type": "string",
      "default": "dot",
      "order": 7,
      "description": "The engine smcat uses to layout the diagram. **dot** delivers the\nbest results.\n\nIn some edge cases other engines perform better. Note that\nonly _dot_, _fdp_ and _osage_ understand composite state machines.",
      "enum": [
        "dot",
        "circo",
        "fdp",
        "neato",
        "osage",
        "twopi"
      ]
    }
  },
  "readmeFilename": "README.md",
  "dependencies": {
    "amdefine": "1.0.1",
    "atom-space-pen-views": "2.2.0",
    "fs-plus": "3.0.2",
    "state-machine-cat": "2.6.6",
    "underscore-plus": "1.6.6",
    "viz.js": "1.8.1"
  },
  "devDependencies": {
    "temp": "0.8.3",
    "eslint": "4.19.1"
  },
  "bugs": {
    "url": "https://github.com/sverweij/atom-state-machine-cat-preview/issues"
  }
}
