{
  "scopeName": "source.smcat",
  "name": "State Machine Cat",
  "type": "tree-sitter",
  "parser": "tree-sitter-smcat",
  "fileTypes": [
    "smcat"
  ],
  "injectionRegex": "smcat",
  "folds": [
    {
      "type": "comment"
    },
    {
      "type": "states"
    },
    {
      "type": "transitions"
    },
    {
      "type": "nested_state_machine"
    }
  ],
  "comments": {
    "start": "// "
  },
  "scopes": {
    "state_machine"            : "source.smcat",
    "state_identifier"         : "variable.smcat",
    "extended_state_key"       : "keyword.smcat",
    "extended_state_value"     : "string.smcat",
    "extended_transition_key"  : "keyword.smcat",
    "extended_transition_value": "string.smcat",
    "string"                   : "string.smcat",
    "note"                     : "storage.smcat",
    "comment"                  : "comment.block",
    "arrow"                    : "keyword.operator.smcat",
    "equals"                   : "keyword.operator.smcat",
    "colon"                    : "keyword.operator.smcat",
    "semicolon"                : "keyword.operator.smcat",
    "comma"                    : "keyword.operator.smcat",
    "curly_bracket_open"       : "punctuation.begin.bracket.curly.smcat",
    "curly_bracket_close"      : "punctuation.end.bracket.curly.smcat",
    "square_bracket_open"      : "punctuation.begin.bracket.square.smcat",
    "square_bracket_close"     : "punctuation.end.bracket.square.smcat",
    "state_machine > ERROR, nested_state_machine > ERROR" : "invalid.illegal.smcat",
    "states > ERROR"           : "string.smcat",
    "transitions > ERROR"      : "string.smcat"

  }
}
