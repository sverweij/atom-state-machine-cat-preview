{
  "scopeName": "source.smcat",
  "name": "State Machine Cat",
  "foldingStartMarker": "{s*$",
  "foldingStopMarker": "^s*}",
  "fileTypes": [
    "smcat"
  ],
  "patterns": [
    {
      "include": "#stateDeclaration"
    },
    {
      "include": "#punctuation"
    },
    {
      "include": "#comment"
    },
    {
      "include": "#transitionType"
    },
    {
      "include": "#attributelist"
    },
    {
      "include": "#identifier"
    },
    {
      "include": "#illegalalien"
    }
  ],
  "repository": {
    "punctuation": {
      "match": "(,|;)",
      "name": "punctuation.separator.smcat"
    },
    "illegalalien": {
      "comment": "include as last pattern to declare everything different from spaces illegal",
      "match": "\\S",
      "name": "invalid.illegal.smcat"
    },
    "commentBlock": {
      "comment": "e.g. /* yadda */",
      "begin": "/\\*",
      "captures": {
        "0": {
          "name": "punctuation.definition.comment.smcat"
        }
      },
      "end": "\\*/",
      "name": "comment.block.smcat"
    },
    "commentLineSlash": {
      "comment": "e.g. // yadda",
      "begin": "(^[ \\t]+)?(?=//)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.whitespace.comment.leading.smcat"
        }
      },
      "end": "(?!\\G)",
      "patterns": [
        {
          "begin": "//",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.smcat"
            }
          },
          "end": "\\n",
          "name": "comment.line.double-slash.smcat"
        }
      ]
    },
    "commentLineHash": {
      "comment": "e.g. # yadda",
      "begin": "(^[ \\t]+)?(?=#)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.whitespace.comment.leading.smcat"
        }
      },
      "end": "(?!\\G)",
      "patterns": [
        {
          "begin": "#",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.smcat"
            }
          },
          "end": "\\n",
          "name": "comment.line.number-sign.smcat"
        }
      ]
    },
    "comment": {
      "patterns": [
        {
          "include": "#commentBlock"
        },
        {
          "include": "#commentLineSlash"
        },
        {
          "include": "#commentLineHash"
        }
      ]
    },
    "identifier": {
      "patterns": [
        {
          "comment": "identifier - bare bones. In smcat * (\"every state\") can be used as a special identifier as well",
          "match": "([^;, \\\"\\t\\n\\r=\\-><:\\{\\*])+|(\\*)",
          "name": "variable.identifier.smcat"
        },
        {
          "comment": "identifer - quoted. Basically a string, but we can't duplicate that",
          "begin": "\"",
          "end": "\"",
          "name": "variable.identifier.smcat",
          "patterns": [
            {
              "match": "\\\\.",
              "name": "constant.character.escape.smcat"
            }
          ]
        }
      ]
    },
    "string": {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.smcat"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.smcat"
        }
      },
      "name": "string.quoted.double.smcat",
      "patterns": [
        {
          "match": "\\\\.",
          "name": "constant.character.escape.smcat"
        }
      ]
    },
    "transitionType": {
      "patterns": [
        {
          "comment": "relation - symbols",
          "match": "(--|==|->|=>>|=>|>>|:>|<-|<<=|<=|<<|<:)",
          "name": "storage.type.smcat"
        }
      ]
    },
    "stateDeclaration": {

    },
    "attributelist": {
      "begin": ":",
      "beginCaptures": {
        "0": {
          "name": "punctuation.attributelist.start.smcat"
        }
      },
      "end": "(;|,)",
      "endCaptures": {
        "0": {
          "name": "punctuation.attributelist.end.smcat"
        }
      },
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#inlineblock"
        },
        {
          "include": "#string"
        },
        {
          "match": "[^,;\\\"\\{]+",
          "name": "string"
        },
        {
          "match": "\\\\.",
          "name": "constant.character.escape.smcat"
        }
      ]
    },
    "inlineblock": {
      "begin": "\\{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.inlineblock.start.smcat"
        }
      },
      "end": "(\\})(;)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.inlineblock.end.smcat"
        },
        "2": {
          "name": "punctuation.separator.inlineblock.end.smcat"
        }
      },
      "patterns": [
        {
          "include": "#identifier"
        },
        {
          "include": "#transitionType"
        },
        {
          "include": "#inlineblock"
        },
        {
          "include": "#punctuation"
        },
        {
          "include": "#comment"
        },
        {
          "include": "#illegalalien"
        }
      ]
    }
  }
}
